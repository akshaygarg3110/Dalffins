{"version":3,"sources":["pages/Kitchen/UpdateItemDialog.js","pages/Kitchen/DishItem.js","pages/Kitchen/AddItemDialog.js","pages/Kitchen/DishList.js","pages/Kitchen/MyKitchen.js","components/menu/menu.js","components/footer/footer.js","components/Kitchen/Layout.js","components/Kitchen/Main.js","App.js","reportWebVitals.js","index.js"],"names":["mealTypes","useStyles","makeStyles","theme","dropZoneArea","marginTop","spacing","padding","minHeight","UpdateItemDialog","foodItem","open","handleClose","UserID","classes","React","useState","mealtype","mealType","setMealType","image","setImage","console","log","Dialog","onClose","aria-labelledby","noValidate","autoComplete","onSubmit","event","preventDefault","form","target","formData","_id","dishID","dishname","title","value","dishRating","Image","dishcost","cost","dishstatus","delivery","Axios","put","then","response","DialogTitle","id","DialogContent","TextField","label","type","fullWidth","defaultValue","margin","select","onChange","helperText","map","option","MenuItem","FormControl","initialFiles","filesLimit","dropzoneClass","dropzoneText","acceptedFiles","files","reader","FileReader","addEventListener","result","readAsDataURL","DialogActions","Button","onClick","FoodItem","styled","Card","DishItem","removeItemFromList","updateItem","anchorEl","setAnchorEl","setOpen","updateDialogOpen","setUpdateDialogOpen","style","opacity","CardHeader","action","IconButton","aria-label","aria-haspopup","currentTarget","Menu","keepMounted","Boolean","subheader","Rating","name","Number","readOnly","titleTypographyProps","variant","color","CardMedia","height","CardContent","Typography","float","aria-describedby","DialogContentText","delete","data","autoFocus","Suspense","fallback","AddItemDialog","addItem","nextId","Email","vendorEmail","post","responsive","superLargeDesktop","breakpoint","max","min","items","desktop","laptop","tablet","mobile","DishList","props","foodItems","setFoodItems","showSnackBar","setShowSnackBar","history","useHistory","useEffect","Id","a","axios","get","res","fetchDishList","window","alert","push","newFoodItems","removeItem","itemId","filter","item","handleSnackBarClose","textAlign","length","email","Snackbar","autoHideDuration","Alert","severity","KitchenImage","div","img","MyKitchen","kitchenImages","Carousel","Item","className","src","userId","root","flexGrow","menuButton","marginRight","dalffinsButton","fontSize","DalffinsMenu","profileMenu","setProfileMenu","signUp","login","handleClick","handleCloseAccount","handleCloseLogOut","localStorage","setUserToken","noOfOrderItems","orderedItems","size","summary","AppBar","position","Toolbar","Box","hasOwnProperty","userToken","getItem","personPin","firstName","typoText","footerBar","top","bottom","Footer","userEmail","Layout","Main","main","App","Map","token","setToken","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9c86ff8b.chunk.js","sourcesContent":["/* Author: Tanuj Sobti (B00864990) */\r\nimport React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { DropzoneArea } from \"material-ui-dropzone\";\r\nimport { Button, FormControl, makeStyles } from \"@material-ui/core\";\r\nimport Axios from \"axios\";\r\n\r\nconst mealTypes = [\"Breakfast\", \"Snack\", \"Lunch\", \"Dinner\"];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  dropZoneArea: {\r\n    marginTop: theme.spacing(3),\r\n    padding: theme.spacing(2),\r\n    minHeight: 200,\r\n  },\r\n}));\r\n\r\n /* Renders the dailog box for updating the item */\r\n\r\nfunction UpdateItemDialog({ foodItem, open, handleClose , UserID }) {\r\n  const classes = useStyles();\r\n  const [mealType, setMealType] = React.useState(foodItem.mealtype);\r\n  const [image, setImage] = React.useState(\"\");\r\n  console.log(foodItem);\r\n  const handleFileUpload = (files) => {\r\n    const reader = new FileReader();\r\n\r\n    reader.addEventListener(\r\n      \"load\",\r\n      function () {\r\n        setImage(reader.result);\r\n      },\r\n      false\r\n    );\r\n\r\n    if (files[0]) {\r\n      reader.readAsDataURL(files[0]);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const form = event.target;\r\n    const formData = {\r\n      _id: foodItem._id,\r\n      UserID: UserID,\r\n      dishID: foodItem.dishID,\r\n      dishname: form.title.value,\r\n      dishRating: foodItem.dishRating,\r\n      Image: image,\r\n      dishcost: `${form.cost.value}`,\r\n      mealtype: mealType,\r\n      dishstatus: \"True\",\r\n      delivery: form.delivery.value,\r\n    };\r\n    /* API call for updating the details of the dish */\r\n    console.log(formData);\r\n    Axios.put(\"https://dalffins.herokuapp.com/dish/updatedish/\"+ foodItem._id, formData).then(\r\n      (response) => {\r\n        handleClose(formData);\r\n      }\r\n    );\r\n  };\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={handleClose}\r\n      aria-labelledby=\"form-dialog-title\"\r\n    >\r\n      <form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\r\n        <DialogTitle id=\"form-dialog-title\">Add Dish</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            id=\"title\"\r\n            label=\"Dish Name\"\r\n            type=\"text\"\r\n            fullWidth\r\n            defaultValue={foodItem.dishname}\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            id=\"cost\"\r\n            label=\"Cost\"\r\n            type=\"text\"\r\n            fullWidth\r\n            defaultValue={foodItem.dishcost}\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            id=\"mealType\"\r\n            select\r\n            label=\"Select\"\r\n            value={mealType}\r\n            onChange={(event) => setMealType(event.target.value)}\r\n            helperText=\"Please select meal type\"\r\n            defaultValue={foodItem.mealtype}\r\n          >\r\n            {mealTypes.map((option) => (\r\n              <MenuItem key={option} value={option}>\r\n                {option}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n          <TextField\r\n            id=\"delivery\"\r\n            label=\"Delivery\"\r\n            type=\"text\"\r\n            fullWidth\r\n            defaultValue={foodItem.delivery}\r\n          />\r\n          <FormControl fullWidth>\r\n            <DropzoneArea\r\n              initialFiles={[foodItem.Image]}\r\n              filesLimit={1}\r\n              dropzoneClass={classes.dropZoneArea}\r\n              dropzoneText={\"Drag and drop a dish image here or click\"}\r\n              acceptedFiles={[\"image/*\"]}\r\n              onChange={handleFileUpload}\r\n            />\r\n          </FormControl>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>Cancel</Button>\r\n          <Button type=\"submit\">Submit</Button>\r\n        </DialogActions>\r\n      </form>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default UpdateItemDialog;\r\n","/* Author: Tanuj Sobti (B00864990) */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  CardMedia,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  IconButton,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport Rating from \"@material-ui/lab/Rating\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Axios from \"axios\";\r\nimport UpdateItemDialog from \"./UpdateItemDialog\";\r\n\r\nconst FoodItem = styled(Card)`\r\n  min-height: 300px;\r\n`;\r\n\r\n/* Renders the individual dish component of the Kitchen Feature */\r\nfunction DishItem({ removeItemFromList, foodItem, updateItem ,UserID}) {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [updateDialogOpen, setUpdateDialogOpen] = React.useState(false);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n \r\n  /* API call for removing the dish from database */\r\n  const handleConfirmRemove = () => {\r\n    Axios.delete(\"https://dalffins.herokuapp.com/dish/removedish/\" + foodItem._id, {\r\n      data: {\r\n        UserID: foodItem.UserID,\r\n      },\r\n    }).then((response) => {\r\n      setOpen(false);\r\n      removeItemFromList(foodItem._id);\r\n    });\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleRemove = () => {\r\n    setOpen(true);\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleUpdate = () => {\r\n    setUpdateDialogOpen(true);\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  /* API call for disabling the inactive dish */\r\n  const handleDisable = () => {\r\n    Axios.put(\"https://dalffins.herokuapp.com/dish/updatedish/\"+ foodItem._id, {\r\n        UserID : foodItem.UserID,       \r\n        dishstatus: \"False\" }).then(\r\n      (response) => {\r\n        updateItem({ ...foodItem, dishstatus: \"False\" });\r\n        handleClose();\r\n      }\r\n    );\r\n  };\r\n \r\n  /* API call for enabling the disabled dish */\r\n  const handleEnable = () => {\r\n    Axios.put(\"https://dalffins.herokuapp.com/dish/updatedish/\"+ foodItem._id, {\r\n      UserID : foodItem.UserID, \r\n      dishstatus: \"True\" }).then(\r\n      (response) => {\r\n        updateItem({ ...foodItem, dishstatus: \"True\" });\r\n        handleClose();\r\n      }\r\n    );\r\n  };\r\n\r\n  const handleUpdateClose = (formData) => {\r\n    updateItem(formData);\r\n    setUpdateDialogOpen(false);\r\n  };\r\n  return (\r\n    <>\r\n      <FoodItem\r\n        style={{ opacity: foodItem.dishstatus === \"True\" ? \"1\" : \"0.5\" }}\r\n      >\r\n        <CardHeader\r\n          action={\r\n            <>\r\n              <IconButton\r\n                aria-label=\"settings\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleClick}\r\n              >\r\n                <MoreVertIcon />\r\n              </IconButton>\r\n              <Menu\r\n                id={\"menu\" + foodItem.dishID}\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleClose}\r\n              >\r\n                <MenuItem onClick={handleUpdate}>Update</MenuItem>\r\n                <MenuItem onClick={handleEnable}>Enable</MenuItem>\r\n                <MenuItem onClick={handleDisable}>Disable</MenuItem>\r\n                <MenuItem onClick={handleRemove}>Remove</MenuItem>\r\n              </Menu>\r\n            </>\r\n          }\r\n          title={foodItem.dishname}\r\n          subheader={\r\n            <Rating\r\n              name=\"read-only\"\r\n              value={Number(foodItem.dishRating)}\r\n              readOnly\r\n            />\r\n          }\r\n          titleTypographyProps={{\r\n            variant: \"body1\",\r\n            color: \"textPrimary\",\r\n          }}\r\n        />\r\n        <CardMedia\r\n          style={{ height: 0, padding: \"25%\" }}\r\n          image={foodItem.Image}\r\n          title=\"mydish\"\r\n        />\r\n        <CardContent>\r\n          <Typography variant=\"body2\" color=\"textPrimary\">\r\n            Cost: <span style={{ float: \"right\" }}>${foodItem.dishcost}</span>\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textPrimary\">\r\n            Meal Type:{\" \"}\r\n            <span style={{ float: \"right\" }}>{foodItem.mealtype}</span>\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textPrimary\">\r\n            Delivery:{\" \"}\r\n            <span style={{ float: \"right\" }}>{foodItem.delivery}</span>\r\n          </Typography>\r\n        </CardContent>\r\n      </FoodItem>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">\r\n          {\"Are you sure you want to delete this item?\"}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            This action is irreversible. If you are planning to add this item\r\n            again in the future, you can choose to disable the item instead of\r\n            removal.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCancel} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleConfirmRemove} color=\"primary\" autoFocus>\r\n            Remove\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      {updateDialogOpen ? (\r\n        <React.Suspense fallback={<p>loading</p>}>\r\n          // Updating dish added by the user\r\n          <UpdateItemDialog\r\n            open={updateDialogOpen}\r\n            handleClose={handleUpdateClose}\r\n            foodItem={foodItem}\r\n            UserID = {UserID}\r\n          />\r\n        </React.Suspense>\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default DishItem;\r\n","/* Author: Tanuj Sobti (B00864990) */\r\nimport React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { DropzoneArea } from \"material-ui-dropzone\";\r\nimport { Button, FormControl, makeStyles } from \"@material-ui/core\";\r\nimport Axios from \"axios\";\r\n\r\nconst mealTypes = [\"Breakfast\", \"Snack\", \"Lunch\", \"Dinner\"];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  dropZoneArea: {\r\n    marginTop: theme.spacing(3),\r\n    padding: theme.spacing(2),\r\n    minHeight: 200,\r\n  },\r\n}));\r\n\r\n/* Renders the addItem form for adding the dish details */\r\n\r\nfunction AddItemDialog({ addItem, nextId, open, handleClose, UserID , Email }) {\r\n  const classes = useStyles();\r\n  const [mealType, setMealType] = React.useState(\"\");\r\n  const [image, setImage] = React.useState(\"\");\r\n\r\n  const handleFileUpload = (files) => {\r\n    const reader = new FileReader();\r\n\r\n    reader.addEventListener(\r\n      \"load\",\r\n      function () {\r\n        setImage(reader.result);\r\n      },\r\n      false\r\n    );\r\n\r\n    if (files[0]) {\r\n      reader.readAsDataURL(files[0]);\r\n    }\r\n  };\r\n\r\n  console.log(UserID)\r\n  console.log(Email)\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const form = event.target;\r\n    const formData = {\r\n      UserID: UserID,\r\n      dishID: nextId,\r\n      vendorEmail : Email,\r\n      dishname: form.title.value,\r\n      dishRating: 0,\r\n      Image: image,\r\n      dishcost: `${form.cost.value}`,\r\n      mealtype: mealType,\r\n      dishstatus: \"True\",\r\n      delivery: form.delivery.value,\r\n    };\r\n    /* API call adding the dish into the backend system */\r\n  \r\n    Axios.post(\"https://dalffins.herokuapp.com/dish/adddish\", formData).then(\r\n      (response) => {\r\n        addItem(response.data);\r\n      }\r\n    );\r\n  };\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={handleClose}\r\n      aria-labelledby=\"form-dialog-title\"\r\n    >\r\n      <form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\r\n        <DialogTitle id=\"form-dialog-title\">Add Dish</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            id=\"title\"\r\n            label=\"Dish Name\"\r\n            type=\"text\"\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            id=\"cost\"\r\n            label=\"Cost\"\r\n            type=\"text\"\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            id=\"mealType\"\r\n            select\r\n            label=\"Select\"\r\n            value={mealType}\r\n            onChange={(event) => setMealType(event.target.value)}\r\n            helperText=\"Please select meal type\"\r\n          >\r\n            {mealTypes.map((option) => (\r\n              <MenuItem key={option} value={option}>\r\n                {option}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n          <TextField id=\"delivery\" label=\"Delivery\" type=\"text\" fullWidth />\r\n          <FormControl fullWidth>\r\n            <DropzoneArea\r\n              filesLimit={1}\r\n              dropzoneClass={classes.dropZoneArea}\r\n              dropzoneText={\"Drag and drop a dish image here or click\"}\r\n              acceptedFiles={[\"image/*\"]}\r\n              onChange={handleFileUpload}\r\n            />\r\n          </FormControl>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>Cancel</Button>\r\n          <Button type=\"submit\">Submit</Button>\r\n        </DialogActions>\r\n      </form>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default AddItemDialog;\r\n","/* Author: Tanuj Sobti (B00864990) */\r\nimport React from \"react\";\r\nimport Carousel from \"react-multi-carousel\";\r\nimport \"react-multi-carousel/lib/styles.css\";\r\nimport DishItem from \"./DishItem\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport AddItemDialog from \"./AddItemDialog\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst responsive = {\r\n  superLargeDesktop: {\r\n    breakpoint: { max: 4000, min: 1201 },\r\n    items: 5,\r\n  },\r\n  desktop: {\r\n    breakpoint: { max: 1200, min: 1025 },\r\n    items: 4,\r\n  },\r\n  laptop: {\r\n    breakpoint: { max: 1024, min: 769 },\r\n    items: 3,\r\n  },\r\n  tablet: {\r\n    breakpoint: { max: 768, min: 481 },\r\n    items: 2,\r\n  },\r\n  mobile: {\r\n    breakpoint: { max: 480, min: 0 },\r\n    items: 1,\r\n  },\r\n};\r\n\r\n/* Renders all the dish mapped to the logged in user's unique UserID */\r\nfunction DishList(props) {\r\n  const [foodItems, setFoodItems] = React.useState([]);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [showSnackBar, setShowSnackBar] = React.useState(false);\r\n  const history = useHistory();\r\n  \r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  \r\n  /* Get all the dishes added by logged in user . */\r\n  React.useEffect(() => {\r\n    if (props.Id) {\r\n    const fetchDishList = async () => {\r\n        const res = await axios.get(\r\n        `https://dalffins.herokuapp.com/dish/getUserDish?UserID=${props.Id}`\r\n      );\r\n      console.log(res.data)\r\n      setFoodItems(res.data);\r\n    };\r\n    fetchDishList();\r\n  } else {\r\n    window.alert(\"Please login in to dalffins. Thank you  !!!\");\r\n    history.push(\"/login\");\r\n  }\r\n  \r\n  }, []);\r\n\r\n\r\n\r\n  const addItem = (formData) => {\r\n    setFoodItems([...foodItems, formData]);\r\n    setOpen(false);\r\n    setShowSnackBar(true);\r\n  };\r\n\r\n  const updateItem = (formData) => {\r\n    let newFoodItems = [...foodItems];\r\n    newFoodItems = newFoodItems.map((foodItem) => {\r\n      if (foodItem._id === formData._id) return formData;\r\n      else return foodItem;\r\n    });\r\n    setFoodItems(newFoodItems);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const removeItem = (itemId) => {\r\n    setFoodItems(foodItems.filter((item) => item._id !== itemId));\r\n  };\r\n\r\n  const handleSnackBarClose = () => {\r\n    setShowSnackBar(false);\r\n  };\r\n  \r\n  /* Iterates over foodItem array for fetching all the dish details . */\r\n  return (\r\n    <>\r\n      <div style={{ textAlign: \"center\" }}>\r\n        <Button variant=\"outlined\" onClick={handleClickOpen}>\r\n          Add dish\r\n        </Button>\r\n      </div>\r\n      <Carousel responsive={responsive}>\r\n        {foodItems.map((foodItem) => (\r\n          <DishItem\r\n            foodItem={foodItem}\r\n            key={foodItem._id}\r\n            removeItemFromList={removeItem}\r\n            updateItem={updateItem}\r\n            UserID={props.Id}\r\n          />\r\n        ))}\r\n      </Carousel>\r\n      {open ? (\r\n        <React.Suspense fallback={<p>loading</p>}>\r\n          // Adding dish to the kitchen \r\n          <AddItemDialog\r\n            open={open}\r\n            addItem={addItem}\r\n            handleClose={handleClose}\r\n            nextId={foodItems[foodItems.length - 1]._id}\r\n            UserID={props.Id}\r\n            Email={props.email}\r\n          />\r\n        </React.Suspense>\r\n      ) : null}\r\n      <Snackbar\r\n        open={showSnackBar}\r\n        autoHideDuration={6000}\r\n        onClose={handleSnackBarClose}\r\n      >\r\n        <Alert onClose={handleSnackBarClose} severity=\"success\">\r\n          New dish added successfully !!\r\n        </Alert>\r\n      </Snackbar>\r\n    </>\r\n  );\r\n}\r\nexport default DishList;\r\n","/* Author: Tanuj Sobti (B00864990) */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport DishList from \"./DishList\";\r\nimport Carousel from \"react-bootstrap/Carousel\";\r\n\r\n\r\nconst TitleSection = styled.div`\r\n  height: 40vh;\r\n  margin-bottom: 20px;\r\n  border-radius: 10px;\r\n  overflow: hidden;\r\n  position: relative;\r\n`;\r\n\r\nconst Title = styled.div`\r\n  position: absolute;\r\n  color: white;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  text-align: center;\r\n`;\r\n\r\nconst KitchenImage = styled.img`\r\n  height: 100%;\r\n  width: 100%;\r\n  object-fit: cover;\r\n`;\r\n\r\n/* Main function which loads the DishList component for rendering the list of the dish */\r\nfunction MyKitchen(props) {\r\n  const [kitchenName, setKitchenName] = useState(\"Indian Kitchen\");\r\n  const [kitchenImages, setKitchenImages] = useState([\r\n    \"images/Kitchen1.jpg\",\r\n    \"images/Kitchen2.jpg\",\r\n  ]);\r\n\r\n  /* Carousel for displaying the Kitchen images on the main page of feature */\r\n  return (\r\n    <>\r\n       <Carousel style={{ height: \"50vh\" }}>\r\n        {kitchenImages.map((image) => (\r\n          <Carousel.Item>\r\n            <KitchenImage\r\n              className=\"d-block w-100\"\r\n              src={image}\r\n              style={{ height: \"50vh\" }}\r\n            />\r\n          </Carousel.Item>\r\n        ))}\r\n      </Carousel>\r\n      <br />\r\n      <DishList Id={props.userId} email={props.email} />\r\n      <br />\r\n      <br />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MyKitchen;\r\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport { useHistory } from \"react-router-dom\";\nimport { MenuItem } from \"@material-ui/core\";\nimport PersonPinIcon from \"@material-ui/icons/PersonPin\";\nimport Menu from \"@material-ui/core/Menu\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n\n  dalffinsButton: {\n    fontSize: \"23px\",\n    color: \"#ffc107\",\n  },\n}));\n\nexport default function DalffinsMenu(props) {\n\n  const classes = useStyles();\n\n  const [profileMenu, setProfileMenu] = React.useState(null);\n\n  const history = useHistory();\n\n  const open = Boolean(profileMenu);\n\n  const signUp = () => {\n    history.push(\"/signup\");\n  };\n\n  const login = () => {\n    history.push(\"/login\");\n  };\n\n  const pageRefresh = () => {\n    history.push(\"/\");\n  };\n  const handleClick = (event) => {\n    setProfileMenu(event.currentTarget);\n  };\n\n  const handleCloseAccount = () => {\n    history.push(\"/myAccount\");\n    setProfileMenu(null);\n  };\n\n  const handleCloseLogOut = () => {\n    localStorage.removeItem(\"isAdmin\");\n    history.push(\"/login\");\n    localStorage.removeItem(\"token\");\n    props.setUserToken(\"\");\n    setProfileMenu(null);\n  };\n\n  const handleClose = () => {\n    setProfileMenu(null);\n  };\n\n  const noOfOrderItems = props.orderedItems.size;\n  console.log(noOfOrderItems);\n\n  const update = () => {\n    history.push(\"/kitchen\");\n  };\n\n  const summary = () => {\n    history.push(\"/summaryAndPayment\");\n  };\n\n  const conNavBar = () => {\n    if (props.userToken || localStorage.getItem(\"isAdmin\") === \"true\") {\n      return (\n        <>\n          <Button color=\"inherit\" onClick={handleClick}>\n            <PersonPinIcon className={classes.personPin} />\n            Hey, {props.firstName}\n          </Button>\n\n          <Menu anchorEl={profileMenu} open={open} onClose={handleClose}>\n            {!localStorage.hasOwnProperty(\"isAdmin\") ? (\n              <MenuItem onClick={handleCloseAccount}>My Account</MenuItem>\n            ) : null}\n            <MenuItem onClick={handleCloseLogOut}>Logout</MenuItem>\n          </Menu>\n        </>\n      );\n    }\n    return (\n      <>\n        <Button color=\"inherit\" onClick={signUp}>\n          Register\n        </Button>\n        <Button color=\"inherit\" onClick={login}>\n          Login\n        </Button>\n      </>\n    );\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"fixed\">\n        <Toolbar>\n          <Button className={classes.dalffinsButton} onClick={pageRefresh}>\n            <Typography variant=\"h6\">Dalffins</Typography>\n          </Button>\n          <Box className={classes.title} />\n          {!localStorage.hasOwnProperty(\"isAdmin\") ? (\n            <>\n              <Button color=\"inherit\" onClick={update}>\n                Kitchen\n              </Button>\n              {noOfOrderItems > 0 ? (\n                <Button\n                  color=\"inherit\"\n                  style={{ color: \"#ffc107\" }}\n                  onClick={summary}\n                >\n                  <b>Cart({noOfOrderItems})</b>\n                </Button>\n              ) : (\n                <Button color=\"inherit\" onClick={summary}>\n                  Cart\n                </Button>\n              )}\n            </>\n          ) : null}\n          {conNavBar()}\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  typoText: {\n    flexGrow: 1,\n    fontSize: \"14px\",\n    color: \"white\",\n  },\n  footerBar: {\n    top: \"auto\",\n    bottom: 0,\n  },\n}));\n\nexport default function Footer({ userEmail }) {\n  const classes = useStyles();\n\n  const history = useHistory();\n\n  const onHelpClickHandler = () => {\n    history.push(\"/help\");\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar className={classes.footerBar}>\n        <Toolbar>\n          <Typography variant=\"caption\" className={classes.typoText}>\n            Copyright © 2021 Dalffins. All rights reserved.\n          </Typography>\n\n          <Button color=\"inherit\">FAQs</Button>\n          <Button color=\"inherit\">About Us</Button>\n          <Button color=\"inherit\">Contact Us</Button>\n          {userEmail && userEmail.length > 0 && !localStorage.getItem('isAdmin') ? (\n            <Button color=\"inherit\" onClick={onHelpClickHandler}>\n              Help\n            </Button>\n          ) : null}\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import styled from '@emotion/styled'\r\n\r\nconst Layout = styled.div`\r\n  min-height: 100vh;\r\n`\r\n\r\nexport default Layout\r\n","import styled from '@emotion/styled'\r\n\r\nconst Main = styled.main`\r\n  min-height: calc(100vh - 60px);\r\n  padding: 30px 8vw;\r\n`\r\nexport default Main\r\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport MyKitchen from \"./pages/Kitchen/MyKitchen\";\nimport { Switch, Route } from \"react-router-dom\";\nimport DalffinsMenu from \"./components/menu/menu\";\nimport Footer from \"./components/footer/footer\";\nimport Layout from \"./components/Kitchen/Layout\";\nimport Main from \"./components/Kitchen/Main\";\n\nfunction App() {\n  const [orderedItems, setOrderedItems] = useState(new Map());\n\n  const [orderedItemsSize, setOrderedItemsSize] = useState(0);\n\n  const [id, setId] = useState(\"\");\n\n  const [token, setToken] = useState(\"\");\n\n  const [firstName, setFirstName] = useState(\"\");\n\n  const [email, setEmail] = useState(\"\");\n\n  const orderItemHandler = (orderedItemsInput) => {\n    console.log(orderedItemsInput);\n    setOrderedItems(orderedItemsInput);\n    setOrderedItemsSize(orderedItems.size);\n    console.log(orderedItemsSize);\n  };\n\n  return (\n    <>\n      {console.log(\"orderedItems \" + orderedItems)}\n      <DalffinsMenu\n        orderedItems={orderedItems}\n        userToken={token}\n        setUserToken={setToken}\n        firstName={firstName}\n      />\n\n      <Switch>\n        <Route exact path=\"/kitchen\">\n          <Layout>\n            <Main>\n             <MyKitchen userId=\"122\" email=\"tanuj.sobti@dal.ca\"/>\n            </Main>\n          </Layout>\n        </Route>\n\n      </Switch>\n\n      <Footer userEmail=\"tanuj.sobti@dal.ca\" />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}